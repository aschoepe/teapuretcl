# Makefile.in --
#
#	If ths is "Makefile.in" then it is a template for a Makefile;  to generate 
#	the actual Makefile, run "./configure", which is a configuration script
#	generated by the "autoconf" program (constructs like "@foo@" will get
#	replaced in the actual Makefile.
#
# Copyright (C) 2019 Alexander Schoepe, Bochum, DE
#

#========================================================================
# Nothing of the variables below this line need to be changed.
#========================================================================

SHELL		= @SHELL@

srcdir		= @srcdir@
top_srcdir	= @top_srcdir@
prefix		= @prefix@
exec_prefix	= @exec_prefix@
datarootdir	= @datarootdir@
libdir		= @libdir@
mandir		= @mandir@
bindir		= @bindir@

DESTDIR		=
pkglibdir	= $(libdir)/@PACKAGE_NAME@@PACKAGE_VERSION@
top_builddir	= .

PACKAGE_NAME	= @PACKAGE_NAME@
PACKAGE_VERSION	= @PACKAGE_VERSION@
CYGPATH		= @CYGPATH@

TCLSH_PROG	= @TCLSH_PROG@

PKG_TCL_SOURCES	= @PKG_TCL_SOURCES@

CONFIG_CLEAN_FILES = Makefile pkgIndex.tcl
CLEANFILES	= @CLEANFILES@

#========================================================================
# Start of user-definable TARGETS section
#========================================================================

all:

install:
	$(TCLSH_PROG) `@CYGPATH@ $(srcdir)/helper.tcl` cp $(PKG_TCL_SOURCES) pkgIndex.tcl $(pkglibdir)

test:
	$(TCLSH_PROG) `@CYGPATH@ $(srcdir)/tests/all.tcl` $(TESTFLAGS) \
	  -load "package ifneeded ${PACKAGE_NAME} ${PACKAGE_VERSION} [list source [file join `@CYGPATH@ $(srcdir)` $(PACKAGE_NAME).tcl]]"

clean:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
	-rm -rf doc

distclean: clean
	-rm -f $(CONFIG_CLEAN_FILES)
	-rm -rf autom4te.cache
	-rm -f config.cache config.log config.status

.PHONY: all install test clean distclean
